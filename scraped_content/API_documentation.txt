¶
This document is written like an instruction manual, but you can also readtraditional API documentationgenerated from the Beautiful Soup source code. If you want details
about Beautiful Soup's internals, or a feature not covered in this
document, try the API documentation.
traditional API documentation
traditional API documentation
Quick Start¶Here's an HTML document I'll be using as an example throughout this
document. It's part of a story fromAlice in Wonderland:html_doc="""<html><head><title>The Dormouse's story</title></head><body><p class="title"><b>The Dormouse's story</b></p><p class="story">Once upon a time there were three little sisters; and their names were<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>,<a href="http://example.com/lacie" class="sister" id="link2">Lacie</a> and<a href="http://example.com/tillie" class="sister" id="link3">Tillie</a>;and they lived at the bottom of a well.</p><p class="story">...</p>"""Running the "three sisters" document through Beautiful Soup gives us aBeautifulSoupobject, which represents the document as a nested
data structure:frombs4importBeautifulSoupsoup=BeautifulSoup(html_doc,'html.parser')print(soup.prettify())# <html>#  <head>#   <title>#    The Dormouse's story#   </title>#  </head>#  <body>#   <p class="title">#    <b>#     The Dormouse's story#    </b>#   </p>#   <p class="story">#    Once upon a time there were three little sisters; and their names were#    <a class="sister" href="http://example.com/elsie" id="link1">#     Elsie#    </a>#    ,#    <a class="sister" href="http://example.com/lacie" id="link2">#     Lacie#    </a>#    and#    <a class="sister" href="http://example.com/tillie" id="link3">#     Tillie#    </a>#    ; and they lived at the bottom of a well.#   </p>#   <p class="story">#    ...#   </p>#  </body># </html>Here are some simple ways to navigate that data structure:soup.title# <title>The Dormouse's story</title>soup.title.name# u'title'soup.title.string# u'The Dormouse's story'soup.title.parent.name# u'head'soup.p# <p class="title"><b>The Dormouse's story</b></p>soup.p['class']# u'title'soup.a# <a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>soup.find_all('a')# [<a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>,#  <a class="sister" href="http://example.com/lacie" id="link2">Lacie</a>,#  <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a>]soup.find(id="link3")# <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a>One common task is extracting all the URLs found within a page's <a> tags:forlinkinsoup.find_all('a'):print(link.get('href'))# http://example.com/elsie# http://example.com/lacie# http://example.com/tillieAnother common task is extracting all the text from a page:print(soup.get_text())# The Dormouse's story## The Dormouse's story## Once upon a time there were three little sisters; and their names were# Elsie,# Lacie and# Tillie;# and they lived at the bottom of a well.## ...Does this look like what you need? If so, read on.