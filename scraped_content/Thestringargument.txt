string
string
¶
With thestringargument, you can search for strings instead of tags. As
withnameand attribute keyword arguments, you can pass ina string,a
regular expression,a function,a list, orthe value True.
Here are some examples:
string
string
name
name
a string
a
regular expression
a function
a list
the value True
soup.find_all(string="Elsie")# ['Elsie']soup.find_all(string=["Tillie","Elsie","Lacie"])# ['Elsie', 'Lacie', 'Tillie']soup.find_all(string=re.compile("Dormouse"))# ["The Dormouse's story", "The Dormouse's story"]defis_the_only_string_within_a_tag(s):"""Return True if this string is the only child of its parent tag."""return(s==s.parent.string)soup.find_all(string=is_the_only_string_within_a_tag)# ["The Dormouse's story", "The Dormouse's story", 'Elsie', 'Lacie', 'Tillie', '...']
soup.find_all(string="Elsie")# ['Elsie']soup.find_all(string=["Tillie","Elsie","Lacie"])# ['Elsie', 'Lacie', 'Tillie']soup.find_all(string=re.compile("Dormouse"))# ["The Dormouse's story", "The Dormouse's story"]defis_the_only_string_within_a_tag(s):"""Return True if this string is the only child of its parent tag."""return(s==s.parent.string)soup.find_all(string=is_the_only_string_within_a_tag)# ["The Dormouse's story", "The Dormouse's story", 'Elsie', 'Lacie', 'Tillie', '...']
soup.find_all(string="Elsie")# ['Elsie']soup.find_all(string=["Tillie","Elsie","Lacie"])# ['Elsie', 'Lacie', 'Tillie']soup.find_all(string=re.compile("Dormouse"))# ["The Dormouse's story", "The Dormouse's story"]defis_the_only_string_within_a_tag(s):"""Return True if this string is the only child of its parent tag."""return(s==s.parent.string)soup.find_all(string=is_the_only_string_within_a_tag)# ["The Dormouse's story", "The Dormouse's story", 'Elsie', 'Lacie', 'Tillie', '...']

soup
.
find_all
(
string
=
"Elsie"
)
# ['Elsie']
soup
.
find_all
(
string
=
[
"Tillie"
,
"Elsie"
,
"Lacie"
])
# ['Elsie', 'Lacie', 'Tillie']
soup
.
find_all
(
string
=
re
.
compile
(
"Dormouse"
))
# ["The Dormouse's story", "The Dormouse's story"]
def
is_the_only_string_within_a_tag
(
s
):

"""Return True if this string is the only child of its parent tag."""
return
(
s
==
s
.
parent
.
string
)
soup
.
find_all
(
string
=
is_the_only_string_within_a_tag
)
# ["The Dormouse's story", "The Dormouse's story", 'Elsie', 'Lacie', 'Tillie', '...']
If you use thestringargument in a tag search, Beautiful Soup will find
all tags whose.stringmatches your value forstring. This code finds
the <a> tags whose.stringis "Elsie":
string
string
.string
.string
string
string
.string
.string
soup.find_all("a",string="Elsie")# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]
soup.find_all("a",string="Elsie")# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]
soup.find_all("a",string="Elsie")# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]

soup
.
find_all
(
"a"
,
string
=
"Elsie"
)
# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]
Thestringargument is new in Beautiful Soup 4.4.0. In earlier
versions it was calledtext:
string
string
text
text
soup.find_all("a",text="Elsie")# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]
soup.find_all("a",text="Elsie")# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]
soup.find_all("a",text="Elsie")# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]

soup
.
find_all
(
"a"
,
text
=
"Elsie"
)
# [<a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>]
Thelimitargument¶find_all()returns all the tags and strings that match your
filters. This can take a while if the document is large. If you don't
needallthe results, you can pass in a number forlimit. This
works just like the LIMIT keyword in SQL. It tells Beautiful Soup to
stop gathering results after it's found a certain number.There are three links in the "three sisters" document, but this code
only finds the first two:soup.find_all("a",limit=2)# [<a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>,#  <a class="sister" href="http://example.com/lacie" id="link2">Lacie</a>]
