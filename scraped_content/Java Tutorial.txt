Java Tutorial | Learn Java Programming - Tpoint Tech
Tutorials
×
Python
Python Tutorial
Django Tutorial
Numpy Tutorial
Pandas Tutorial
Tkinter Tutorial
Pytorch Tutorial
Flask Tutorial
OpenCV Tutorial
Java
Java Tutorial
Servlet Tutorial
JSP Tutorial
Spring Boot Tutorial
Spring Framework Tutorial
Hibernate Tutorial
JavaFX Tutorial
Java Web Services Tutorial
.Net Framework
.Net Framework Tutorial
C# Tutorial
ASP.Net Tutorial
ADO.Net Tutorial
WPF Tutorial
AI, ML and Data Science
Artificial Intelligence Tutorial
Machine Learning Tutorial
Data Science Tutorial
Deep Learning Tutorial
TensorFlow Tutorial
Artificial Neural Network Tutorial
Matplotlib Tutorial
Python Scipy Tutorial
Cloud Technology
Cloud Computing Tutorial
AWS Tutorial
Microsoft Azure Tutorial
Salesforce Tutorial
GCP Tutorial
B.Tech and MCA
DBMS Tutorial
Data Structures Tutorial
Operating System Tutorial
Computer Network Tutorial
DAA Tutorial
Computer Organization Tutorial
Software Engineering Tutorial
Data Mining Tutorial
Web Technology
HTML Tutorial
CSS Tutorial
JavaScript Tutorial
Jquery Tutorial
Angular 8 Tutorial
React Tutorial
React Native Tutorial
Node.js Tutorial
PHP
PHP Tutorial
MySQL Tutorial
Laravel Tutorial
WordPress Tutorial
CodeIgniter Tutorial
Software Testing
Software Testing Tutorial
Selenium Tutorial
JIRA Tutorial
JMeter Tutorial
Postman Tutorial
TestNG Tutorial
SoapUI Tutorial
Cucumber Tutorial
Interview
×
Technical Interview
Python Interview Questions
Java Interview Questions
.Net Interview Questions
C++ Interview Questions
React Interview Questions
Node.js Interview Questions
Angular Interview Questions
SQL Interview Questions
HR Interview Questions
Java Interview
Spring Boot Interview Questions
Spring Interview Questions
Hibernate Interview Questions
JDBC Interview Questions
Servlet Interview Questions
Maven Interview Questions
Jenkins Interview Questions
Python
Django Interview Questions
Pandas Interview Questions
Express.js Interview Questions
Python Coding Interview Questions
Python Interview Questions for 5 Years
Web Interview
HTML Interview Questions
CSS Interview Questions
JavaScript Interview Questions
Jquery Interview Questions
PHP Interview Questions
Laravel Interview Questions
AJAX Interview Questions
Front-End Developer Interview Questions
jQuery Interview Questions
Database Interview
DBMS Interview Questions
SQL Interview Questions
PL/SQL Interview Questions
Oracle Interview Questions
MySQL Interview Questions
MongoDB Interview Questions
Redis Interview Questions
B.Tech / MCA
DBMS Interview Questions
Operating System Interview Questions
OOPs Interview Questions
DSA Interview Questions
Computer Networks Interview Questions
Important Interview
C Interview Questions
Power BI Interview Questions
C# Interview Questions
Excel Interview Questions
C# Interview Questions
Machine Learning Interview Questions
AWS Interview Questions
Microservices Interview Questions
MySQL Interview Questions
Software Testing Interview
Manual Testing Interview Questions
Selenium Interview Questions
API Testing Interview Questions
ETL Testing Interview Questions
Mobile Testing Interview Questions
Company Interviews
IBM Interview Questions
Adobe Interview Questions
Microsoft Interview Questions
Amazon Interview Questions
TCS Interview Questions
Wipro Interview Questions
Accenture Interview Questions
Compiler
×
Online Compilers
Python Online Compiler
Java Online Compiler
PHP Online Compiler
C Online Compiler
C++ Online Compiler
HTML Online Compiler
JavaScript Online Compiler
TypeScript Online Compiler
R Online Compiler
Swift Online Compiler
Kotlin Online Compiler
Go Online Compiler
C# Online Compiler
Perl Online Compiler
Groovy Online Compiler
HTML, CSS & JavaScript Online Editor
Multiple Choice Questions
Python MCQ
Java MCQ
PHP MCQ
C Programming MCQ
C++ MCQ
HTML mcq
JavaScript MCQ
SQL MCQ
Operating System MCQ
Computer Fundamental MCQ
Computer Network MCQ
DBMS MCQ
Data Structure MCQ
Software Engineering MCQ
Cloud Computing MCQ
Artificial Intelligence MCQ
Python
Java
JavaScript
SQL
C
C++
HTML
CSS
React
Node.js
Spring Boot
C#
PHP
MySQL
MongoDB
AI
ML
DSA
DBMS
OS
Aptitude
Reasoning
Java Tutorial
Java Tutorial
History of Java
Features of Java
Difference between C++ and Java
Java Hello World Program
Program Internal
How to set path in Java
Difference between JDK, JRE and JVM
JVM: Java Virtual Machine
Java Variables
Data Types in Java
Unicode System in Java
Java Operators
Java Keywords
Control Statements
Control Statements in Java
Java If-else Statement
Java Switch Statement
Java For Loop
For-Each Loop in Java
Java While Loop
Java Do-While Loop
Java Break
Java Continue
Java Comments
Java Programs
Java Object Class
OOPs Concepts in Java
Java Naming Convention
Java Classes and Objects
Methods in Java
Constructors in Java
static keyword in Java
this Keyword in Java
Java Inheritance
Inheritance in Java
Aggregation in Java
Java Polymorphism
Method Overloading in Java
Method Overriding in Java
Covariant Return Type in Java
Super Keyword in Java
Instance Initializer Block in Java
Final Keyword in Java
Polymorphism in Java
Static and Dynamic Binding in Java
Java instanceof Keyword
Java Abstraction
Abstract class in Java
Interface in java
Difference between Abstract Class and Interface in Java
Java Encapsulation
Packages in Java
Access Modifiers in Java
Encapsulation in Java
Java Array
Java Arrays
Arrays Class in Java
Java OOPs Misc
Object class in Java
Object Cloning in Java | clone() Method
Java Math Class (Methods with Examples)
Wrapper Class in Java
Recursion in Java
Call by Value and Call by Reference in Java
Java Enums
Command Line Arguments in Java
Difference between Object and Class
Difference Between Method Overloading and Method Overriding in Java
Difference Between Class and Interface in Java
Abstraction in Java
Compile-Time Polymorphism in Java
Dynamic Method Dispatch in Java
Java String
Java Strings
Why String is Immutable in Java
String Comparison in Java
String Concatenation in Java
Substring in Java
Java String Methods
StringBuffer in Java
StringBuilder in Java
Difference between String and StringBuffer
StringBuffer vs StringBuilder in Java
How to create Immutable Class in Java
Java toString method
StringTokenizer class
Java String FAQs
How to Reverse a String in Java?
Java Regex
Java Regular Expressions (Regex)
Exception Handling
Exception Handling in Java
Java try-catch block
Multiple Catch Block in Java
Nested Try Block in Java
Finally Block in Java
Java Throw Exception
Exception Propagation in Java
Java throws Keyword
Difference Between throw and throws in Java
Difference between final, finally and finalize in Java
Exception Handling with Method Overriding
Custom Exception in Java
Java Inner Class
Inner Classes in Java
Java Member Inner class
Anonymous Inner class
Local Inner class
static nested class
Java Nested Interface
Java Multithreading
Multithreading in Java
Thread Life Cycle in Java
How to Create Thread in Java?
Thread Scheduler in Java
Thread.sleep() in Java with Examples
Start a thread twice
Calling run() method
Joining Threads in Java
Java Naming Thread and Current Thread
Thread Priority in Java
Daemon Thread in Java
Thread Pool in Java
ThreadGroup in Java
ShutdownHook
Performing multiple task
Garbage Collection in Java
Runtime class
Java Synchronization
Synchronization in Java
Java Synchronized Block
Static Synchronization in Java
Deadlock in Java
Inter-thread Communication in Java
Interrupting Thread
Reentrant Monitor
Volatile Keyword in Java
Java I/O
Java Input/Output
FileOutputStream
FileInputStream
BufferedOutputStream
BufferedInputStream
SequenceInputStream
ByteArrayOutputStream
ByteArrayInputStream
DataOutputStream
DataInputStream
Java FilterOutputStream
Java FilterInputStream
Java ObjectStream
Java ObjectStreamField
Console
Writer
Reader
FileWriter
FileReader
BufferedWriter
BufferedReader
CharArrayReader
CharArrayWriter
PrintStream
PrintWriter
OutputStreamWriter
InputStreamReader
PushbackInputStream
PushbackReader
StringWriter
StringReader
PipedWriter
PipedReader
FilterWriter
FilterReader
Scanner class in Java
File Handling in Java
File Handling in Java
Java File
How to Create a File in Java?
How to read file line by line in Java?
How to delete a file in Java?
Java FilePermission
Java FileDescriptor
Java RandomAccessFile
How to Create a Zip File in Java?
How to Read and Print All Files From a Zip File in Java?
How to Write to a File in Java
Java Path Vs File
Java Serialization
Java Serialization | Serialization and Deserialization in Java
transient Keyword in Java
Java Networking
Networking Concepts
Socket Programming
URL class
URLConnection class
HttpURLConnection
InetAddress class
Java Reflection
Reflection API
newInstance() method
javap tool
creating javap tool
creating appletviewer
Call private method
Java Collections
Collections in Java
Java ArrayList
Java LinkedList
Difference Between ArrayList and LinkedList
Java List Interface
Java HashSet
Java LinkedHashSet
Java TreeSet
Queue & PriorityQueue
Deque & ArrayDeque
Java Map Interface
Java HashMap
Working of HashMap
Java LinkedHashMap
Java TreeMap
Java Hashtable
Difference between HashMap and Hashtable
Java EnumSet
Java EnumMap
Collections class
Sorting Collections
Java Comparable
Java Comparator
Comparable vs Comparator in Java
Properties class
Difference between ArrayList and Vector
Java Vector
Java Stack
Java Collection Interface
Java Iterator
Java Deque Interface
Working of HashSet in Java
Java 5 Features
Java Generics
Java Annotations
Autoboxing and Unboxing in Java
Java Varargs
Java Static Import
Java 8 Features
Java 8 Features
Java Lambda Expressions
Java Method References
Functional Interfaces in Java
Java Stream API
Java Stream Filter
Java Base64 Encode Decode
Java Default Methods
Java 8 forEach() method
Collectors class in Java
Optional class in Java
Java JDBC
JDBC in Java
JDBC Driver
5 Steps to Connect Database in Java
Java Database Connectivity with Oracle
Java Database Connectivity with MySQL
Access without DSN
DriverManager
Java Connection interface
Java Statement Interface
ResultSet
PreparedStatement interface
Java ResultSetMetaData Interface
DatabaseMetaData
Store image
Retrieve image
Store file
Retrieve file
CallableStatement
Transaction Management
Batch Processing
RowSet Interface
JDBC MCQ
RMI
Java RMI
Internationalization
Internationalization
ResourceBundle class
I18N with Date
I18N with Time
I18N with Number
I18N with Currency
Java Projects
Free Java Projects
Payment Bill(JSP)
Transport (JSP)
Connect Globe (JSP)
Online Banking (JSP)
Online Quiz (JSP)
Classified (JSP)
Mailcasting (JSP)
Online Library (JSP)
Pharmacy (JSP)
Mailer (Servlet)
Baby Care (Servlet)
Chat Server (Core)
Library (Core)
Exam System (Core)
Java Apps (Core)
Fee Report (Core)
Fee (Servlet)
eLibrary (Servlet)
Fire Detection
Attendance System
Java MCQ
next →
Tutorial
Compiler
Programs
OOPs
Collections
Interview Questions
Java Tutorial
9 Apr 2025
|
8 min read
Our Core Java programming tutorial is designed for students and working professionals. Java is an
object-oriented
, class-based, concurrent, secured and general-purpose computer programming language. It is a widely used robust technology.
What is Java?
Java is a
programming language
and a
platform
. Java is a high-level, robust, object-oriented and secure programming language.
Java was developed by
Sun Microsystems
(which is now a subsidiary of Oracle) in the year 1995.
James Gosling
is known as the father of Java. Before Java, its name was
Oak
. Since Oak was already a registered company, so James Gosling and his team changed the name from Oak to Java.
Platform:
Any hardware or software environment in which a program runs is known as a platform. Since Java has a runtime environment (JRE) and API, it is called a platform.
Java Example
Let's have a quick look at the Java programming example. A detailed description of the Hello World! example is available on the next page.
public class Main{
    public static void main(String args[]){
     System.out.println("Hello, World!");
    }
}
Compile and Run Java
Getting Started
Before diving into coding, we will need to set up your development environment. Java development typically requires the Java Development Kit (JDK), which includes the
Java compiler
and other essential tools. You can download the JDK from the official Oracle website and follow the installation instructions for your operating system.
Once we have the JDK installed, you can use a text editor or an Integrated Development Environment (IDE) like IntelliJ IDEA, Eclipse, or NetBeans to write and run your Java code. IDEs provide features such as code completion, debugging, and project management, making them invaluable tools for developers.
Application
According to Sun Microsystems, 3 billion devices run Java. There are various devices where Java is currently used. Some of them are as follows:
Desktop Applications such as Acrobat Reader, media player, antivirus, etc.
Web Applications such as irctc.co.in, tpointtech.com, etc.
Enterprise Applications such as banking applications.
Mobile
Embedded System
Smart Card
Robotics
Games, etc.
Types of Java Applications
There are the following 4-types of applications that can be created using Java programming:
1) Standalone Application
Standalone applications are also known as desktop applications or window-based applications. These are traditional software that we need to install on every machine. Examples of standalone applications are Media players, antivirus, etc. AWT and Swing are used in Java for creating standalone applications.
2) Web Application
An application that runs on the server side and creates a dynamic page is called a web application. Currently,
Servlet
,
JSP
,
Struts
,
Spring
,
Hibernate
,
JSF
, etc. technologies are used for creating web applications in Java.
3) Enterprise Application
An application that is distributed in nature, such as banking applications, etc. is called an enterprise application. It has advantages like high-level security, load balancing, and clustering. In Java,
EJB
is used for creating enterprise applications.
4) Mobile Application
An application that is created for mobile devices is called a mobile application. Currently, Android and Java ME are used for creating mobile applications.
Java Platforms / Editions
There are four platforms or editions of Java:
1) Java SE (Java Standard Edition)
It is a Java programming platform. It includes Java programming APIs such as java.lang, java.io, java.net, java.util, java.sql, java.math etc. It includes core topics like OOPs,
String
, Regex, Exception, Inner classes, Multithreading, I/O Stream, Networking, AWT, Swing, Reflection, Collection, etc.
2) Java EE (Java Enterprise Edition)
It is an enterprise platform that is mainly used to develop web and enterprise applications. It is built on top of the Java SE platform. It includes topics like Servlet, JSP, Web Services, EJB,
JPA
, etc.
3) Java ME (Java Micro Edition)
It is a micro platform that is dedicated to mobile applications.
4) JavaFX
It is used to develop rich Internet applications. It uses a lightweight user interface API.
Prerequisite
To learn Java, you must have a basic knowledge of C/C++ programming language.
Audience
Our Java programming tutorial is designed to help beginners and professionals.
Problem
We assure you that you will not find any problems in this Java tutorial. However, if there is any mistake, please post the problem in the contact form.
Java Tutorial MCQs
1) In respect of Java, select the correct one.
Java is a high-level, general-purpose, object-oriented programming language.
Java is a low-level, general-purpose, object-oriented programming language.
Java is a high-level, general-purpose, object-based programming language.
Java is a high-level, general-purpose, native programming language.
Show Answer
Workspace
Answer:
1
Description:
Java is a high-level, general-purpose, object-oriented programming language.
High-Level-
A programming language that is designed to make it easier for humans to understand and write.
General Purpose-
A "general-purpose programming language" can be used for a wide variety of applications across different domains.
Object Oriented-
Object-oriented programming is a paradigm that treats everything as an
object
. It supports
encapsulation, inheritance, polymorphism,
and
abstraction
.
2) Which of the following Java editions is suitable for the development of web applications?
Java ME
Java SE
Java EE
Java FX
Show Answer
Workspace
Answer:
3
Description:
Java EE (Java Enterprise Edition):
It is an enterprise platform that is mainly used to develop web and enterprise applications. It is built on top of the Java SE platform. It includes topics like Servlet, JSP, Web Services, EJB,
JPA
, etc.
3) Java programming language is also known as…….?
KAO
OKA
AOK
OAK
Show Answer
Workspace
Answer:
4
Description:
Java was developed by
Sun Microsystems
in the year 1995. Before Java, its name was
Oak
. Since Oak was already a registered company, so
James Gosling
and his team changed the name from Oak to Java.
4) Who invented Java Programming?
Guido van Rossum
James Gosling
Dennis Ritchie
Bjarne Stroustrup
Show Answer
Workspace
Answer:
2
Description:
Java programming was developed by
James Gosling
at
Sun Microsystems
in 1995. James Gosling is well known as the
father of Java
.
5) Which component is used to compile, debug and execute the Java programs?
JRE
JIT
JVM
JDK
Show Answer
Workspace
Answer:
4
Description:
JDK
is a core component of
Java Environment
and provides all the tools, executables and binaries required to compile, debug and execute a Java Program.
Do You Know?
What is the difference between JRE and JVM?
What is the purpose of JIT compiler?
Can we save the java source file without any name?
Why java uses the concept of Unicode system?
Java Basics
What is Java
History of Java
Features of Java
C++ vs Java
Java Hello World Program
Java Program Internal Details
How to set path in Java?
JDK, JRE and JVM
JVM: Java Virtual Machine
Java Variables
Identifiers in Java
Java Data Types
Type Casting in Java
Unicode System in Java
Operators in Java
Java Keywords
Java Control Statements
Java Control Statements
Java If-else
Java Switch
Java For Loop
Java While Loop
Java Do While Loop
Java Break
Java Continue
Java Comments
Java Programs
Java Object Class
Java OOPs Concepts
Java Naming Conventions
Object and Class in Java
Constructor in Java
static keyword in Java
this keyword in Java
Methods in Java
Methods in Java
How to Call a Method in Java
Recursion in Java
Call By Value and Call By Reference in Java
Java Inheritance
Inheritance in Java
Aggregation in Java
Java Polymorphism
Method Overloading in Java
Method Overriding in Java
Covariant Return Type in Java
Java super keyword
Java Instance Initializer block
Java final keyword
Polymorphism in Java
Static and Dynamic Binding in Java
Java instanceof operator
Java Abstraction
Abstract class in Java
Interface in Java
Abstract class vs Interface
Java Encapsulation
Package in Java
Access Modifiers in Java
Encapsulation in Java
Java Array
Java Array
Java Jagged Array
Java Array Programs
Java Array Methods
Java OOPs Misc
Object class in Java
Object Cloning
Java Math class
Wrapper Class in Java
strictfp keyword
javadoc tool
Command Line Argument in Java
Object vs Class
Method Overloading vs Method Overriding
Java String
Java String
Why String is Immutable in Java?
String Comparison in Java
String Concatenation in Java
Substring in Java
Methods of String class
StringBuffer in Java
StringBuilder in Java
String vs StringBuffer in Java
StringBuffer vs StringBuilder in Java
How to Create Immutable class in Java?
Java toString method
StringTokenizer class in Java
Java String FAQs
Java Regex
Java Regex
Java Exception Handling
Java Exceptions
Java Try-catch block
Java Multiple Catch Block
Java Nested try
Java Finally Block
Java Throw Keyword
Java Exception Propagation
Java Throws Keyword
Java Throw vs Throws
Final vs Finally vs Finalize
Exception Handling with Method Overriding
Java Custom Exceptions
Java Inner Class
Java inner class
Member Inner class
Anonymous Inner class
Local Inner class
static nested class
Nested Interface
Java Multithreading
Multithreading in Java
Life Cycle of a Thread
How to Create Thread
Thread Scheduler in Java
Sleeping a thread in Java
Can we start a thread twice?
What if we Call run() method
Joining a thread in Java
Naming a thread in Java
Thread Priority in Java
Daemon Thread in Java
Thread Pool in Java
ThreadGroup in Java
ShutdownHook Thread in Java
Multitasking in Multithreading
Garbage Collection in Java
Java Runtime class
Java Synchronization
Synchronization in java
Java Synchronized Block
Java Static Synchronization
Deadlock in Java
Inter-thread Communication in Java
Interrupting a Thread in Java
Reentrant Monitor in Java
Java Input/Output
Java Input/Output
Java FileOutputStream
Java FileInputStream
Java BufferedOutputStream
Java BufferedInputStream
Java SequenceInputStream
Java ByteArrayOutputStream
Java ByteArrayInputStream
Java DataOutputStream
Java DataInputStream
Java FilterOutputStream
Java FilterInputStream
Java ObjectStream
Java ObjectStreamField
Java Console
Java FilePermission
Java Writer
Java Reader
Java FileWriter
Java FileReader
Java BufferedWriter
Java BufferedReader
Java CharArrayReader
Java CharArrayWriter
Java PrintStream
Java PrintWriter
Java OutputStreamWriter
Java InputStreamReader
Java PushbackInputStream
Java PushbackReader
Java StringWriter
Java StringReader
Java PipedWriter
Java PipedReader
Java FilterWriter
Java FilterReader
Java Scanner
Java File Handling
File Handling in Java
Java File class
How to Create a File in Java
How to Read File in Java
How to Delete a File in Java
Java FilePermission class
Java FileDescriptor class
Java RandomAccessFile
How to Create a Zip File in Java
How to Read and Print All Files from a Zip file in Java?
Java Path vs File
Java Serialization
Java Serialization
Java transient keyword
Java Networking
Java Networking Concepts
Socket Programming in Java
Java URL class
Java URLConnection class
Java HttpURLConnection
Java InetAddress class
Java Reflection
Java Reflection API
Java newInstance() method
javap tool
creating javap tool
How to Call private method from another class?
Java Memory Management
Java Memory Management
Stack vs Heap Memory in Java
Java Garbage Collection
How Garbage Collection Works in Java?
Memory Leaks in Java
Java Collections
Collections in Java
Java ArrayList
Java LinkedList
ArrayList vs LinkedList
Java List Interface
Java LinkedHashSet
Java TreeSet
Queue & PriorityQueue
Deque & ArrayDeque
Java Map Interface
Java HashMap
Working of HashMap
Java LinkedHashMap
Java TreeMap
Java Hashtable
HashMap vs Hashtable
Java EnumSet
Java EnumMap
Java Collections class
Sorting Collections in Java
Comparable interface in Java
Comparator interface in Java
Comparable vs Comparator
Properties class in Java
ArrayList vs Vector
Java Vector
Java Stack
Java Collection Interface
Java Iterator Interface
Java Deque Interface
Working of HashSet in Java
Data Structures in Java
Data Structures in Java
Linear Search in Java
Binary Search in Java
Insertion Sort in Java
Selection Sort in Java
Bubble Sort in Java
Merge Sort in Java
Java JDBC
JDBC Introduction
JDBC Driver
Java Database Connectivity with 5 Steps
Connectivity with Oracle
Connectivity with MySQL
Access without DSN
DriverManager
Connection
Statement
ResultSet
PreparedStatement
Java ResultSetMetaData Interface
DatabaseMetaData
Store image
Retrieve image
Store file
Retrieve file
CallableStatement
Transaction Management
Batch Processing
RowSet Interface
JDBC MCQ
Java 8
Java 8 Features
Java RMI
Java RMI
Internationalization in Java
Internationalization (i18N) in Java
ResourceBundle class
Internationalization with Date
Internationalization with Time
Internationalization with Number
Internationalization with Currency
Java Interview Questions
300+ Java Interview Questions
Next Topic
History of Java
next →
Related Posts
Java Keywords
Java keywords are also known as reserved words. Keywords are particular words that act as a key to a code. These are predefined words by Java so they cannot be used as a variable or object name or class name. Example //Program of Java keywords public...
5 min read
Difference between C++ and Java
Difference&nbsp;Between C++ and Java There are many differences and similarities between the C++ programming language and Java. A list of top differences between C++ and Java is given below: Aspect C++ Java Platform-independent C++ is platform-dependent. Java is platform-independent. Mainly used for C++ is mainly used for system programming. Java is mainly used for application...
5 min read
How to set path in Java
? In Java, the path is an environment variable used by the operating system. It locates the javac and java commands. In other words, the Java path variable ents us from writing the entire path on the CLI (Command Line Interface) every time when we execute...
4 min read
Java Operators
Operators are an essential part of any programming language. In Java, operator is a symbol that is used to perform operations. For example: +, -, *, / etc. These are essential for performing different types of operations on variables and values. In this section, we...
13 min read
Java Variables
A variable is a container which holds the value while the Java program is executed. A variable is assigned with a data type. Variable is a name of memory location. There are three types of variables in java: local, instance and static. There are two types of...
4 min read
Program Internal
Internal Details of Hello Java&nbsp;Program In the ious section, we have created Java Hello World program and learn how to compile and run a Java program. In this section, we are going to learn, what happens while we compile and run the Java program. Moreover, we...
1 min read
Difference between JDK, JRE and JVM
Difference between JDK, JRE, and JVM We must understand the differences between JDK, JRE, and JVM before proceeding further to Java. See the brief overview of JVM here. If you want to get the detailed knowledge of Java Virtual Machine, move to the page. Firstly, let&#39;s...
4 min read
Features of Java
The primary objective of Java programming language creation was to make it portable, simple and secure programming language. Apart from this, there are also some excellent features which play an important role in the popularity of this language. The features of Java are also known...
4 min read
Data Types in Java
In programming languages, data types specify the different sizes and values that can be stored in the variable or constants. Each data type is predefined, which makes Java a statically and strongly typed language. There are the following two types of data types in Java. Primitive...
10 min read
History of Java
The history of Java is indeed fascinating. Originally designed for interactive television, Java&#39;s journey began with the Green Team, a group within Sun Microsystems led by James Gosling. Their goal was to create a programming language for digital devices like set-top boxes and televisions. However,...
11 min read
Subscribe to Tpoint Tech
We request you to subscribe our newsletter for upcoming updates.
Subscribe
Learn Important Tutorial
Python
Java
Javascript
HTML
Database
PHP
C++
React
B.Tech / MCA
DBMS
Data Structures
DAA
Operating System
Computer Network
Compiler Design
Computer Organization
Discrete Mathematics
Ethical Hacking
Computer Graphics
Web Technology
Software Engineering
Cyber Security
Automata
C Programming
C++
Java
.Net
Python
Programs
Control System
Data Warehouse
Preparation
Aptitude
Reasoning
Verbal Ability
Interview Questions
Company Questions
We provides tutorials and interview questions of all technology like java tutorial, android, java frameworks
Contact info
G-13, 2nd Floor, Sec-3, Noida, UP, 201301, India
hr@tpointtech.com
+91-9599086977
Follow us
Tutorials
Java
Data Structures
C Programming
C++ Tutorial
C# Tutorial
PHP Tutorial
HTML Tutorial
JavaScript Tutorial
jQuery Tutorial
Spring Tutorial
Interview Questions
Microsoft
Amazon
Adobe
Intuit
Accenture
Cognizant
Capgemini
Wipro
Tcs
Infosys
Online Compiler
C
R
C++
Php
Java
Html
Swift
Python
JavaScript
TypeScript
Latest Post
|
Tutorials List
|
Privacy Policy
© Copyright 2011 - 2025 TpointTech.com. All Rights Reserved.